package ComponetAntiAirFleet;

import java.awt.Dimension;
import java.awt.Point;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class SimpleTestAntiAirFleet2 extends ViewableDigraph {
	// Add Default Constructor
	public SimpleTestAntiAirFleet2() {
		this("SimpleTestAntiAirFleet");
	}

	public SimpleTestAntiAirFleet2(String name) {
		super(name);
		// Initialize sub-components
		ViewableAtomic WarShip_1_1 = new WarShipT("Warship");

		ViewableDigraph RedMissile_1_1 = new RedMissile_1_1("RedMissile_1_1");

//		addInport("i1");// 輸入戰艦初始位置
//		addInport("i2");// 輸入紅方導彈初始位置
//		addInport("i3");// 輸入紅方導彈初始毀傷狀態{ true:被攔截 / false:未被攔截，繼續打擊任務 }

		//addInport("start");
		//addInport("stop");

		addInport("in");// 输出红方导弹位置
		addOutport("out");// 输出红方导弹毁伤情况：{ true,被拦截 / false,未被拦截，继续打击 / success/failure,命中目标 }
		
		// addOutport("result");

		// 仿真参数初始化：
		//addTestInput("start", new entity());
		//addTestInput("stop", new entity(), 5.0);
		
//		addTestInput("i1", new entity("0"));
//		addTestInput("i2", new entity("2000"));
//		addTestInput("i3", new entity("false"));

		// Add sub-components
		add(WarShip_1_1);

		add(RedMissile_1_1);

		// Add Couplings
		// 簡化為在一條線上的操作：
//		addCoupling(this, "i1", WarShip_1_1, "redLoc_in");
//		addCoupling(this, "i2", RedMissile_1_1, "shipLoc_in");
		
		addCoupling(this,"in",RedMissile_1_1,"in");//"missile1"
		addCoupling(RedMissile_1_1,"hit_out",this,"out");// 如果命中，发回消息给ef2，否则不返回
		
		addCoupling(RedMissile_1_1, "out2", WarShip_1_1, "redDestroyed_in");
		addCoupling(RedMissile_1_1, "out", WarShip_1_1, "redLoc_in");

		addCoupling(WarShip_1_1, "ciwsLaunch_out", RedMissile_1_1, "in5");

		addCoupling(WarShip_1_1, "ramLaunch_out", RedMissile_1_1, "in4");

		addCoupling(WarShip_1_1, "samLaunch_out", RedMissile_1_1, "in3");

		addCoupling(WarShip_1_1, "shipLoc_out", RedMissile_1_1, "in2");
		
		addCoupling(RedMissile_1_1, "out2", this, "out");

//		// 输出每个仿真周期中红方导弹的任务执行情况：
//		addCoupling(RedMissile_1_1, "redLoc_out", this, "o1");
//		addCoupling(RedMissile_1_1, "redDestroyed_out", this, "o2");

		// Structure information end
		initialize();

	}
	
	/**
	 * Automatically generated by the SimView program. Do not edit this manually, as
	 * such changes will get overwritten.
	 */
	public void layoutForSimView() {
		preferredSize = new Dimension(900, 500);
		((ViewableComponent) withName("Warship")).setPreferredLocation(new Point(15, 15));
		((ViewableComponent) withName("RedMissile_1_1")).setPreferredLocation(new Point(150, 120));
	}

}
