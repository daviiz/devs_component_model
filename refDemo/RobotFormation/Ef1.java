package refDemo.RobotFormation;

import java.awt.Dimension;
import java.awt.Point;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class Ef1 extends ViewableDigraph {

	public Ef1() {
		super("Ef");

		addInport("pin1");
		addInport("pin6");
		addOutport("command");
		addOutport("startx");
		addOutport("starty");
		addOutport("endx");
		addOutport("endy");
		addOutport("L");
		addOutport("T");
		addOutport("velocity");
		addOutport("stop");
		addOutport("command");

		ViewableAtomic g = new generator("Generator", 100, "./src/StudentProjects/EnvironmentInput.txt");
		ViewableDigraph e = new Environment();
		ViewableAtomic c = new encamera("Camera");

		add(g);
		add(e);
		add(c);

		addCoupling(this, "pin1", e, "pin");
		addCoupling(this, "pin1", c, "pin1");
		addCoupling(this, "pin6", c, "pin6");
		addCoupling(g, "velocity", e, "vin");
		addCoupling(g, "L", c, "L");
		addCoupling(g, "T", c, "T");
		addCoupling(g, "velocity", c, "v");
		addCoupling(e, "startx", c, "startx");
		addCoupling(e, "starty", c, "starty");
		addCoupling(e, "endx", c, "endx");
		addCoupling(e, "endy", c, "endy");
		addCoupling(e, "startx", this, "startx");
		addCoupling(e, "starty", this, "starty");
		addCoupling(e, "endx", this, "endx");
		addCoupling(e, "endy", this, "endy");
		addCoupling(c, "command", this, "command");
		addCoupling(g, "velocity", this, "velocity");
		addCoupling(g, "L", this, "L");
		addCoupling(g, "T", this, "T");
		addCoupling(g, "stop", this, "stop");
		addCoupling(g, "command", this, "command");

		preferredSize = new Dimension(100, 50);
		g.setPreferredLocation(new Point(150, 150));
		e.setPreferredLocation(new Point(150, 30));
		c.setPreferredLocation(new Point(150, 30));

	}

	/**
	 * Automatically generated by the SimView program. Do not edit this manually, as
	 * such changes will get overwritten.
	 */
	public void layoutForSimView() {
		preferredSize = new Dimension(631, 339);
		((ViewableComponent) withName("Environment")).setPreferredLocation(new Point(0, 23));
		((ViewableComponent) withName("Camera")).setPreferredLocation(new Point(286, 26));
		((ViewableComponent) withName("Generator")).setPreferredLocation(new Point(267, 200));
	}
}
