
package refDemo.PursuerEvader;



import java.awt.Dimension;
import java.awt.Point;

import model.plots.CellGridPlot;
import model.simulation.realTime.TunableCoordinator;
import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class vehicleSpace extends  ViewableDigraph{

public static void main (String[ ] args){
TunableCoordinator c = new TunableCoordinator(new vehicleSpace());
c.setTimeScale(.1);
c.initialize();
c.simulate(100000);
}

public vehicleSpace(){
this("vehicleSpace");
}

public vehicleSpace (String nm){
super(nm);

addInport("in");
addOutport("out");
addOutport("outStop");


ViewableDigraph ps  = new  vehicle("pursuer",new vect2DEnt(100,100));
ViewableDigraph ev  = new  vehicle("evader",new vect2DEnt(-100,-100));
ViewableAtomic obs = new obstacles("rock");
ViewableAtomic sobs = new StopObserver("Stop");

add(ps);
add(ev);
add(obs);
add(sobs);

addCoupling(ps,"out",ev,"in");
addCoupling(ev,"out",ps,"in");

addCoupling(ev,"out",this,"out");
addCoupling(ev,"out", sobs, "evader");
addCoupling(ps,"out", sobs, "pursuer");
addCoupling(sobs, "outTime", this, "outStop");

CellGridPlot t = new CellGridPlot(
                             "Motion Plot",1,
                                       250,250);
t.setCellGridViewLocation(600,300);
add(t);
addCoupling(ps,"outDraw",t,"drawCellToScale");
addCoupling(ev,"outDraw",t,"drawCellToScale");
addCoupling(obs,"outDraw",t,"drawCellToScale");

}



    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(986, 788);
        ((ViewableComponent)withName("Stop")).setPreferredLocation(new Point(65, -6));
        ((ViewableComponent)withName("rock")).setPreferredLocation(new Point(80, 424));
        ((ViewableComponent)withName("pursuer")).setPreferredLocation(new Point(-18, -32));
        ((ViewableComponent)withName("evader")).setPreferredLocation(new Point(21, 245));
    }
}


