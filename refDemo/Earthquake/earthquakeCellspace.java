package refDemo.Earthquake;

import java.awt.Dimension;
import java.awt.Point;

import model.modeling.CAModels.TwoDimCellSpace;
import model.plots.CellGridPlot;
import view.modeling.ViewableComponent;

public class earthquakeCellspace
    extends TwoDimCellSpace {
  public earthquakeCellspace() {
    //
    //this(2,2);
    //this(3,3);
    this(20, 20);
  }

  public earthquakeCellspace(int xDim, int yDim) {
    super("EarthQuake Cell Space", xDim, yDim);
    this.numCells = xDim * yDim;
    for (int i = 0; i < xDimCellspace; i++) {
      for (int j = 0; j < yDimCellspace; j++) {
        earthquakeCell earth = new earthquakeCell(i, j, Math.random());
//System.out.println("xDim" + xDimCellspace + "yDim" + yDimCellspace);
        addCell(earth, i, j, xDimCellspace, yDimCellspace);
      }
    }
    earthquakeCell c = (earthquakeCell) withId( (xDimCellspace - 1) / 2,
                                               (yDimCellspace - 1) / 2);
    c.initialforce = 0.5;
    hideAll(); //hides only components so far
    for (int y = 0; y < yDimCellspace; y++) {
      for (int x = 0; x < xDimCellspace - 1; x++) {
        addCoupling( (earthquakeCell) withId(x, y), "outE",
                    (earthquakeCell) withId(x + 1, y), "inW");
        addCoupling( (earthquakeCell) withId(xDimCellspace - 1 - x, y), "outW",
                    (earthquakeCell) withId(xDimCellspace - 2 - x, y), "inE");
      }
    }
    for (int x = 0; x < xDimCellspace; x++) {
      for (int y = 0; y < yDimCellspace - 1; y++) {
        addCoupling( (earthquakeCell) withId(x, y), "outN",
                    (earthquakeCell) withId(x, y + 1), "inS");
        addCoupling( (earthquakeCell) withId(x, yDimCellspace - 1 - y), "outS",
                    (earthquakeCell) withId(x, yDimCellspace - 2 - y), "inN");
      }
    }
//WRAPPING
    for (int x = 0; x < xDimCellspace; x++) {
      addCoupling( (earthquakeCell) withId(x, 0), "outS",
                  (earthquakeCell) withId(x, yDimCellspace - 1), "inN");
      addCoupling( (earthquakeCell) withId(x, yDimCellspace - 1), "outN",
                  (earthquakeCell) withId(x, 0), "inS");
    }
    for (int y = 0; y < yDimCellspace; y++) {
      addCoupling( (earthquakeCell) withId(0, y), "outW",
                  (earthquakeCell) withId(xDimCellspace - 1, y), "inE");
      addCoupling( (earthquakeCell) withId(xDimCellspace - 1, y), "outE",
                  (earthquakeCell) withId(0, y), "inW");
    }
    coupleOneToAll(this, "stop", "stop");
    CellGridPlot t = new CellGridPlot("Earthquake Cell Position Plot", 0.1,
                                      "xPos", 40, "yPos", 40);
    t.setCellSize(20);
    t.setCellGridViewLocation(570, 100);
    add(t);
    coupleAllTo("outDraw", t, "drawCellToScale");
    CellGridPlot p = new CellGridPlot("Earthquake Cell Energy Plot", 0.1,
                                      "xPos", 40, "EnergyReleased", 40);
    p.setCellSize(10);
    p.setCellGridViewLocation(100, 100);
    add(p);
    coupleAllTo("outEnergy", p, "drawCellToScale");
  }

  /**
   * Automatically generated by the SimView program.
   * Do not edit this manually, as such changes will get overwritten.
   */
  public void layoutForSimView() {
    preferredSize = new Dimension(900, 1300);
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 1")).
        setPreferredLocation(new Point(232, 37));
    ( (ViewableComponent) withName("Cell_key = 2 ,value = 1")).
        setPreferredLocation(new Point( -69, 25));
    ( (ViewableComponent) withName("Cell_key = 2 ,value = 0")).
        setPreferredLocation(new Point(50, 82));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 0")).
        setPreferredLocation(new Point(50, 50));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 2")).
        setPreferredLocation(new Point(50, 50));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 0")).
        setPreferredLocation(new Point(50, 50));
    ( (ViewableComponent) withName("Cell_key = 0 ,value = 2")).
        setPreferredLocation(new Point(50, 50));
    ( (ViewableComponent) withName("Cell_key = 1 ,value = 1")).
        setPreferredLocation(new Point(50, 50));
    ( (ViewableComponent) withName("Cell_key = 2 ,value = 2")).
        setPreferredLocation(new Point(50, 50));
  }
}
// End lightSpreadCellSpace
