package refDemo.DigAudio;

import java.awt.Dimension;
import java.awt.Point;

import model.plots.CellGridPlot;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;


public class DAP extends ViewableDigraph
{
  public DAP()
  {
    this("DAP");
  }

  public DAP(String name)
  {
    super(name);

    addInport("start");
    addInport("load");
    addInport("filter_type");
    addInport("window_type");
    addInport("fs");
    addInport("fc1");
    addInport("fc1_1");
    addInport("fc1_2");
    addInport("fc2");
    addInport("fc2_1");
    addInport("fc2_2");

    addOutport("out");

    Coordinator c = new Coordinator("Coordinator");
    fft f = new fft("FFT Controller");
    Memory filter_1 = new Memory("filter_1", 128);
    Memory filter_2 = new Memory("filter_1", 128);
    Memory filter_3 = new Memory("filter_1", 128);
    Memory filter_4 = new Memory("filter_1", 128);
    //inputUnit iu = new inputUnit("Input Unit");
    inputTestMod iu = new inputTestMod();
    ComplexMultiplier cm = new ComplexMultiplier("Complex Multiplier");
    outputUnit ou = new outputUnit("Output Unit");
    //data_ac data = new data_ac("DATA_AC");
    CellGridPlot timeP = new CellGridPlot("Time Plot",200,2);


    timeP.setCellGridViewLocation(100,300);
    timeP.setSpaceSize(200,200);
    timeP.setCellSize(3);
    timeP.setTimeScale(186);
    //timeP.setHidden(false);


    add(c);
    add(filter_1);
    add(f);
    add(iu);
    add(cm);
    add(ou);
    //add(data);
    add(timeP);


    //addCoupling(f,"dataR",timeP,"timePlot");
    //addCoupling(c,"dataR",timeP,"pulsePlot");



    addCoupling(this, "start", c, "start");
    addCoupling(this, "load", c, "load");
    addCoupling(this, "filter_type", c, "filter_type");
    addCoupling(this, "window_type", c, "window_type");
    addCoupling(this, "fc1", c, "fc1");
    addCoupling(this, "fc1_1", c, "fc1_1");
    addCoupling(this, "fc1_2", c, "fc1_2");
    addCoupling(this, "fc2", c, "fc2");
    addCoupling(this, "fc2_1", c, "fc2_1");
    addCoupling(this, "fc2_2", c, "fc2_2");
    addCoupling(this, "fs", c, "fs");

    addCoupling(c, "dataR", f, "i_dataR");
    addCoupling(c, "dataI", f, "i_dataI");
    addCoupling(c, "wr", f, "load");
    addCoupling(c, "N", f, "N");
    addCoupling(c, "ostart", f, "start");

    addCoupling(c, "rd", filter_1, "rd");
    addCoupling(c, "row", filter_1, "row");
    addCoupling(c, "filter1_en", filter_1, "enable");

    addCoupling(f, "oN", filter_1, "N");
    addCoupling(f, "dataR", filter_1, "dataR");
    addCoupling(f, "dataI", filter_1, "dataI");
    addCoupling(f, "row", filter_1, "row");
    addCoupling(f, "wr", filter_1, "wr");

    addCoupling(f, "done", c, "fft_done");

    addCoupling(c, "out", this, "out");

    addCoupling(iu, "o_xR", cm, "aR");
    addCoupling(iu, "o_xI", cm, "aI");

    addCoupling(filter_1, "odataR", cm, "bR");
    addCoupling(filter_1, "odataI", cm, "bI");

    addCoupling(c, "odone", iu, "start");

    //addCoupling(c, "odone", data, "start");
    //addCoupling(c, "N", data, "L");

    addCoupling(iu, "rd", filter_1, "rd");
    addCoupling(iu, "row", filter_1, "row");

    addCoupling(cm, "AR", ou, "aR");
    addCoupling(cm, "AI", ou, "aI");
    addCoupling(cm, "done", ou, "load");

    addCoupling(ou, "out", this, "out");

    addCoupling(ou,"out",timeP,"pulsePlot");
    //addCoupling(c,"dataR",timeP,"pulsePlot");
  }

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(745, 547);
        ((ViewableComponent)withName("Complex Multiplier")).setPreferredLocation(new Point(342, 403));
        ((ViewableComponent)withName("filter_1")).setPreferredLocation(new Point(-5, 230));
        ((ViewableComponent)withName("Output Unit")).setPreferredLocation(new Point(335, 289));
        ((ViewableComponent)withName("FFT Controller")).setPreferredLocation(new Point(263, 76));
        ((ViewableComponent)withName("Coordinator")).setPreferredLocation(new Point(-34, 19));
        ((ViewableComponent)withName("Input Test Module")).setPreferredLocation(new Point(15, 367));
    }
}
